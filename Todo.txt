Backlog:
  -Engine:
    -Purchasing.
    -Metal.
    -Net/HTTP.
    -Android.

  -Gameplay:
    -A third input method could be to drag pieces from the HUD into the field. If you click on one
     piece in the HUD then it rotates. The selectable pieces area (and pieces) in the HUD could be a
     bit bigger when using drag controls to reduce misclicks. Each cell that is not reachable from
     the top (an illegal move) could be red. A question is if real solid pieces should be dragged in
     or ghost pieces. Real pieces will look better but it is more logical to drag in ghost pieces
     since the real piece is actially at the top and it will drop to the location of the ghost piece
     really quickly (preferably almost as fast as a hard drop like in swipe controls). When the
     piece har dropped, the empty slot in the selectables HUD should be taken over by the next piece
     without rearranging the selectable pieces. What happens with the falling piece once one of the
     selectables (not the active piece) are being dragged in? Maybe it should only be possible to
     drag in the active piece? In that case, rotating the active piece could be done by clicking on
     it in the hud and and clicking on the two selectables could switch piece.
     Another version of this idea is to combine drag input with swipe input (effectively forming the
     swipe/drag input type). So there would be drag/swipe input or click input. This could be
     possible if (either 1.a OR 1.b OR 1.c) and 2:
     Either (1.a): rotating pieces using drag/swipe input is only done by tapping the screen as in
     pure swipe controls (this would then rotate all pieces in the selectables container, but they
     could rotate back to their default rotation at the next move, switch piece or cancel drag etc.)
     since rotating a selectable piece by clicking the piece in the selectables container would be
     indistinguishable from switching active piece. Switching active piece in 1.a could be done by
     tapping the selectables container.
     Or (1.b): switching active piece using drag/swipe input is only done by swiping up since
     switching active piece by clicking the selectables container would be indistinguishable from
     rotating the piece in the selectables container. Rotating a piece in 1.a could be done by
     tapping the the piece in the selectables container.
     Or (1.c): switching active piece using drag/swipe input is only done by swiping up and rotating
     pieces using drag/swipe input is only done by tapping the screen. Touching the selectables
     container would only be for starting a drag and the start of the touch would not be ambiguous
     in any way (start drag or switch-piece/rotate?)
     And 2: ther can be no traditional ghost piece present all time when using drag/swipe input
     since it would interfere with the ghost piece being dragged in to the field. The traditional
     constant ghost piece for swipe input could be present but removed once a drag is started and
     it could consist of transparent normal blocks (or transparent grey quads is in Tetris Blitz,
     or like Poyo Poyo Tetris) to set it apart from other ghost pieces.
    -Could have ice blocks that are level blocks that can be used to fill and clear rows but they
     shatter if landed on or if falling down in a cascade. Or, they could turn into a normal grey
     level block if the ice is cleared which it will be by filling the row or explosion/laser.
    -A game objective could be to clear all purple blocks. Purple blocks are affected by gravity
     like the other colored blocks.
    -The UFO could be booster. It could clear 3 rows.
    -Maybe blocks in the visible part of the field could disappear on some levels. For each move a
     random block disappears.
    -Maybe a sensitivity setting. Tetris Blitz has lower sensitivity on iPad but not on iPhone.
  -Rendering:
    -Animation that moves the map hud out of the screen when clicking buttons in the hud. Could work
     in a similar way as the SlidingFieldAnimation.
    -Animation that moves the pause button out of the screen.
  -GUI:
  -Make ready for release:
    -Should give free gold coins after a new install?
    -Limit the number of undo move to one or two per game round.
    -Update mail address in legal documents.
    -Go through all user services and check that all state store/load is enabled.
    -Make sure it is not possible to switch control type while playing a level.
    -Make sure analytics is enabled and that user terms accept is saved and checked.
    -Make sure analytics debug log is disabled.
    -Make sure the correct product price in cents and receipt is sent to analytics.
    -Look into the problem of reduced framerate sometimes on iPhoneX.
    -Do a soft launch in a couple of countries? Maybe the nordic countries and UK? Only english
     localization is needed for that. And/or, before that, a small soft launch only in one country
     instead of a playtest since that may give bettar data than a playtest since the players will
     mostly be the target audince and in the playtest they are not.
    -Make launch screens for all supported device resolutions. Should say Teleporter Studios. The
     logo could contain some simple teleporter texture.
     Font: maybe ".Damascus PUA Bold"
    -Make icon.
    -Make sure that creation dates for the resource files that I have created are not too old.
    -Maybe support for different languages.

Ongoing tasks:
    -Try to reduce the state changes in the renderer by comparing current with previous
     shaderType, material, vbo. If the renderable is the same, only SetTransforms is needed.
     Remember that state can only be reused if shaderType (rename to ShaderId?) is the same.
     Set all previous material, vbo etc to null at new render pass and call to text renderer.
    -Fix the missing coin bug in the map hud. Happens in the simulator.
    -Make a static batcher that is accessable from the IRenderer API. Just send a SceneObject that
     should have all its children merged into one renderable. It should detach all children
     SceneObjects (but not delete them or their renderables since ownership of those objects is
     unknown).
     Then, the FloatingBlocks and preview pieces can be batched.
    -Maybe the active piece could be in the left-most slot in the selectables. Then the next piece
     will always come in from the left and go right to the active slot without the other selectables
     moving at all. Might even have a NEXT text over the next pieces to make it really clear. Might
     even make the active preview piece a bit larger and/or adding and effect/animation to set it
     apart from the other selectables. The next pieces container should be smaller.
     All of this will affect some tutorial levels and all levels with pieceSequences.
     It also affects the how to play dialog.
     Also, remember to change the hud rectangle renderables size so that there is a 1-to-1
     texel-to-pixel ratio.
    -Try combining all three input types to one. Maybe possible if the visibility of the move
     alternatives can be toggled with a button next to the pause button. Drag and swipe can be
     combined at least.


    -Go through the levels in world 1.
        -Maybe introduce the laser at level 4 or 3 even.
        -Maybe introduce the bomb at level 6 or 5.



    -Tutorial: Pht animation showing how to fill gray slots. It should show the field scroll up
     after filling all slots in a row.
    -Tutorial: Maybe there could be a cascading/gravity animation.



    -Moves left in assumed user strength play:
      World 2:
        Level 23: 10
        Level 24: 9
        Level 25: 9
        Level 26: 9
        Level 27: 9
        Level 28: 8
        Level 29: 8
        Level 30: 8
        Level 31: 8
        Level 32: 7
        Level 33: 7
      World 3:
        Level 34: 6
        Level 35: 10
        Level 36: 12
        Level 37: 6
        Level 38: 5
        Level 39: 5
        Level 40: 5
        Level 41: 5
        Level 42: 4
        Level 43: 4
        Level 44: 4
        Level 45: 3
        Level 46: 4
        Level 47: 3
        Level 48: 4
        Level 49: 4
        Level 50: 2

    -Levels moved to world 4:
      -Level 65.
      -Level 66.
      -Level 67.
      -Level 73.


Ordered Backlog:
    -Convert GameScene into a Pht::Scene.
        Cost: 10
        Done
    -Let each GuiView be a subscene that can be merged into the current scene.
        Cost: 5
        Done
    -Finalize gameplay.
        Cost: 10
        Done
    -Fix all bugs.
        Cost: 7
        Done
    -Preview piece animation.
        Cost: 5
        Done
    -Block bounce.
        Cost: 5
        Done
    -Better particle effects for bombs and row bombs.
        Cost: 10
        Done
    -Bombs should have bomb meshes.
        Cost: 5
        Done
    -Try bombs part of level.
        Cost: 10
        Done
    -Camera shake.
        Cost: 3
        Done
    -Support for iPhone X screen.
        Cost: 10
        Done
    -Improving sliding text animation.
        Cost: 3
        Done
    -New GUI/Menus.
        Cost: 6
        Done
    -Animations/effects when clearing a level.
        Cost: 7
        Done
    -Dialog before level starts that states objectives and displays piece types.
        Cost: 2
        Done
    -Do the marked non-bug items in the backlog.
        Cost: 8
        Done
    -Animated movement of an avatar to the next level after clearing a level.
        Cost: 2
        Done
    -Go from one world to another.
        Cost: 3
        Done
    -Worlds.
        Cost: 4
        Done
    -Levels in the first world.
        Cost: 5
        Done
    -Tutorial.
        Cost: 10
        Done
    -Redesign the game HUD.
        Cost: 5
        Done
    -Levels in the second world.
        Cost: 7
        Done
    -Finish the remaining title and map scene-related rendering tasks.
        Cost: 7
        Done
    -Space world.
        Cost: 10
        Done
    -Do the most important gameplay tasks.
        Cost: 8
        Done
    -Do the most important game scene-related rendering tasks.
        Cost: 4
        Done
    -Store GUI.
        Cost: 15
        Done
    -Rewrite the audio system.
        Cost: 5
        Done
    -Music.
        Cost: 4
        Done
    -Sound effects.
        Cost: 10
        Done
    -Analytics.
        Cost: 17
        Done
    -Finish the top two rendering tasks.
        Cost: 2
        Done
    -Finish the most important GUI tasks.
        Cost: 5
        Done
    -Levels for the space world.
        Cost: 7
        Done
    -Replace the tutorial slide animations with Pht animations.
        Cost: 5
    -Revise some of the levels.
        Cost: 5
    -Purchasing.
        Cost: 10
    -Release-related tasks.
        Cost: 7
    -Small soft launch.
        Cost: 5
    -Soft launch.
        Cost: 5
    -Levels for the 4th world.
        Cost: 7
    -Metal.
        Cost: 30
    -Net/HTTP.
        Cost: 10
    -Login/sign up account.
        Cost: 10
    -Back end.
        Cost: ?

        Total cost: 327


Levels:
    -Levels moved to world 3:
      -Level 48.
      -Level 49.
    -Levels moved to world 4:
      -Level 65.
      -Level 66.
      -Level 67.


Comomon piece type sets:
    Easy:               RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "Seven",          B
        "MirroredSeven"  G
    Triangles:          RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "Triangle",     R
        "BigTriangle",    B
        "Bomb",
        "RowBomb"
    Only triangles:     RGBY:
        "SmallTriangle",R
        "Triangle",     R
        "BigTriangle",    B
        "Diamond",       G
        "Pyramid",         Y
        "Bomb",
        "RowBomb"
    Medium:             RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "Seven",          B
        "MirroredSeven", G
        "F",            R
        "MirroredF"       B
    Medium, a variant:  RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "Seven",          B
        "MirroredSeven", G
        "Z",               Y
        "MirroredZ"      G
    Hard:               RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "F",            R
        "MirroredF",      B
        "BigL",          G
        "Z",               Y
        "MirroredZ"      G
    Hard, variant:      RGBY:
        "LongI",           Y
        "ShortI",         B
        "L",               Y
        "B",              B
        "D",            R
        "F",            R
        "MirroredF",      B
        "BigL",          G
        "Z",               Y
        "MirroredZ"      G
    Hard, variant:      RGBY:
        "LongI",           Y
        "I",             G
        "B",              B
        "D",            R
        "F",            R
        "MirroredF",      B
        "BigL",          G
        "Z",               Y
        "MirroredZ"      G
        "T",              B
    Really hard:        RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "F",            R
        "MirroredF",      B
        "BigL",          G
        "Z",               Y
        "MirroredZ"      G
        "Plus"            B
    All pieces:         RGBY:
        "LongI",           Y
        "I",             G
        "L",               Y
        "B",              B
        "D",            R
        "Seven",          B
        "MirroredSeven"  G
        "Triangle",     R
        "BigTriangle",    B
        "SmallTriangle",R
        "Diamond",       G
        "Pyramid",         Y
        "F",            R
        "MirroredF",      B
        "BigL",          G
        "Z",               Y
        "MirroredZ"      G
        "T",              B
        "Plus"            B

        Color:    NumbBlocks:
        Red             12.5
        Green           18.0
        Blue            27.5
        Yellow          15.0


Decision notes on level bombs:
        -Should level bombs be counted as full blocks that can be used to clear a row?
            -One idea was that rows containging level bombs could be cleared and the level bombs
             should not trigger since the only way of choosing not to use those level bombs would
             have been to fill the row. However, after testing it became clear that rows with level
             bombs were often cleared by mistake during for example cascading, or you would end up
             in a situation where you would have to clear them even though it will lead to failing
             the level. So it was decided that level bombs does not count as full blocks that can
             clear a row. It also solves the ambiguous case when landing on level bombs and at the
             same time clearing the row containg those level bombs and some extra bombs. Should all
             those level bombs be triggered or only the ones landed on?
        -If level bombs get pulled down and land should they trigger?
            -They should not triggering since this could open up for more strategic play by letting
             the player move level bombs to different rows.
        -If pulled down piece blocks (not gray level blocks) land on level bombs should they trigger?
            -In one way it is logical if they trigger since level bombs trigger when pieces land on
             them. On the other hand, it seems to be hard for the player to prevent pulled down
             blocks from accidentaly hitting bombs at lower rows. Probably tricky to implement but
             it might go something like this:
             during pulling down of pieces, Field detects that a level bomb will eventually be
             land on by piece blocks. The Field then adds that event to GameLogic which will
             detonate the level bomb once it is Updated again (after the CollapsingFieldAnimation is
             done with dragging down the piece blocks position).

Store GUI:
        -Purchase Successful dialog:
             If store opened from pressing add coins in map hud then
                Go back to map.                                         [OK]
             End
             If store was opened from out of moves dialog
                If there is enough coins for more moves then
                    Go back to game with extra moves.                   [OK]
                Else
                    Go back to store menu.                              [OK]
                End
             End
             If store was opened from no lives dialog
                If there is enough coins for refilling lives then
                    If no lives dialog was opened from map hud add lives button
                        Go back to map.                                 [OK]
                    End
                    If no lives dialog was opened from a map start level
                        Go to to the level goal dialog for that level.  [OK]
                    End
                    If no lives dialog was opened from a level restart
                        Go to to the level goal dialog for that level.  [OK]
                    End
                    If no lives dialog was opened from a game over retry
                        Go to to the level goal dialog for that level.  [OK]
                    End
                Else
                    Go back to store menu.                              [OK]
                End
             End
        -Out of moves dialog, clicking on continue button:
             If having enough coins then
                Go back to game with extra moves.                       [OK]
             Else
                Go to store.                                            [OK]
             End
        -Out of moves dialog, clicking on close button:
             If having lives
                Go to the level goal dialog for that level.             [OK]
             Else
                Go back to map.                                         [OK]
             End
        -No lives dialog, clicking continue button:
             If having enough coins for refilling lives then
                If no lives dialog was opened from a level restart then
                    Go to to the level goal dialog for that level.      [OK]
                End
                If no lives dialog was opened from a game over retry then
                    Go to to the level goal dialog for that level.      [OK]
                End
                If no lives dialog was opened from a map start level then
                    Go to to the level goal dialog for that level.      [OK]
                End
                If no lives dialog was opened from map hud add lives button then
                    Go back to map.                                     [OK]
                End
             Else
                Go to store.                                            [OK]
             End






Do this before making tutorial slides:
    -Remove floating blocks
    -Disable light animation
    -Disable camera shake
    -Disable bomb emission animation
    -Disable bomb rotation animation
Gimp rectangle select:
size: 481, 481


Add these clouds before generating sky background texture from title scene:
        CloudPathVolume {
            .mPosition = {-7.5f, -47.0f, -100.0f},
            .mSize = {0.0f, 0.0f, 0.0f},
            .mCloudSize = {30.0f, 30.0f},
            .mNumClouds = 2,
        },
        CloudPathVolume {
            .mPosition = {-15.0f, -60.0f, -100.0f},
            .mSize = {0.0f, 0.0f, 0.0f},
            .mCloudSize = {30.0f, 30.0f},
            .mNumClouds = 2,
        },
        CloudPathVolume {
            .mPosition = {10.0f, -60.0f, -100.0f},
            .mSize = {0.0f, 0.0f, 0.0f},
            .mCloudSize = {25.0f, 25.0f},
            .mNumClouds = 2,
        },


Create rounded cube in Blender:
Scale cube so that size is 1.0. Select the wrench to the right.
Then, Add Modifier > Bevel > turn up width > turn up segments.

triangle_320:
bevel width: 0.13
segments: 5
profile 0.5
Export settings:
    Forward: Y Forward
    Up: Z Up

cube_428:
bevel width: 0.13
weld size: 0.19
segments: 5
profile 0.5

medium_button_skewed_0385.obj:
size: 9.0x2.1
shear: 0.24
bevel width: 0.385
segments: 5


FreeType compilation:
Put the build_freetype.sh script in freetype root dir then execute it.


Did this to get around problem with app not launching on device:
Product -> Scheme -> Edit Scheme -> Info -> Executable -> Ask on Launch
(https://stackoverflow.com/questions/52415694/ios-12-ipad-denied-launch-request-xcode/52584195#52584195)

A side effect is that the debugger does not work with this setting so can only debug in simulator
and when setting it back the the original settings:
Product -> Scheme -> Edit Scheme -> Info -> Executable -> Game.app
